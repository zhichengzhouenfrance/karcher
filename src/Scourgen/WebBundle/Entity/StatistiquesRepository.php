<?php

namespace Scourgen\WebBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * StatistiquesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StatistiquesRepository extends EntityRepository
{
    public function getNombreRechercheToday(){
        $today = strtotime("Today");
        $query = $this->createQueryBuilder('s')
                ->select("SUM(s.rechercheNombre)")
                ->where('s.rechercheDate = :today')
                ->setParameter('today',$today)
                ->getQuery();
        $arrayStatistques = $query->getResult();
        return $arrayStatistques[0][1];
    }

    public function getNombreRechercheWeek(){
        $today = strtotime("Today");
        $firstDayOfWeek = strtotime("first day of this week");
        $query = $this->createQueryBuilder('s')
            ->select("SUM(s.rechercheNombre)")
            ->where('s.rechercheDate >= :firstDayOfWeek ')
            ->andWhere('s.rechercheDate <= :today ')
            ->setParameter('today',$today)
            ->setParameter('firstDayOfWeek',$firstDayOfWeek)
            ->getQuery();
        $statistiqueTheWeek = $query->getResult();
        return  $statistiqueTheWeek[0][1];
    }


    public function getNombreRechercheMonth(){
        $today = strtotime("Today");
        $firstDayOfMonth = strtotime("first day of this month");
        $query = $this->createQueryBuilder('s')
            ->select("SUM(s.rechercheNombre)")
            ->where('s.rechercheDate >= :firstDayOfMonth ')
            ->andWhere('s.rechercheDate <= :today ')
            ->setParameter('today',$today)
            ->setParameter('firstDayOfMonth',$firstDayOfMonth)
            ->getQuery();
        $statistiqueTheMonth = $query->getResult();
        return  $statistiqueTheMonth[0][1];
    }

    public function getNombreRechercheYear(){
        $today = strtotime("Today");
        $firstDayOfYear = strtotime("first day of this year");
        $query = $this->createQueryBuilder('s')
            ->select("SUM(s.rechercheNombre)")
            ->where('s.rechercheDate >= :firstDayOfYear ')
            ->andWhere('s.rechercheDate <= :today ')
            ->setParameter('today',$today)
            ->setParameter('firstDayOfYear',$firstDayOfYear)
            ->getQuery();
        $statistiqueTheYear = $query->getResult();
        return $statistiqueTheYear[0][1];
    }
}
